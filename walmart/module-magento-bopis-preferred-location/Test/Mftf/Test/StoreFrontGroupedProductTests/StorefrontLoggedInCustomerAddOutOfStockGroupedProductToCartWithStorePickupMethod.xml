<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * @copyright Walmart Inc. All Rights Reserved.
 * @author    Blue Acorn iCi <code@blueacorn.com>
 */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontLoggedInCustomerAddOutOfStockGroupedProductToCartWithStorePickupMethod">
        <annotations>
            <stories value="As a store owner I would like to ensure that out of stock products can not be selected for in store pickup at locations that do not have any stock."/>
            <title value="Attempt to add out of stock product to cart using store pickup method"/>
            <description value="1) Create two sources and one stock and assign sources to stock. 2) Create category. 3) Create a grouped product. 4) Assign sources to product and set the quantiry 0 for the first source. 5) Create a customer. 6) Go to the product page on frontend. 7) Select Store Pickup method and select store. 8) Add the product to cart. 9) Check that product is not available message is displayed on mini cart. 10) Disable created sources. 11) Delete product and category created."/>
            <testCaseId value="WMTP-581"/>
            <severity value="MAJOR"/>
            <group value="checkout"/>
        </annotations>

        <before>
            <!--Enable BOPIS Module and Instore Pickup before start testing -->
            <magentoCLI command="config:set {{WCTEnabled.path}} {{WCTEnabled.value}}" stepKey="enableModule"/>
            <magentoCLI command="config:set {{WCTInstorePickupEnabled.path}} {{WCTInstorePickupEnabled.value}}" stepKey="enableInstorePickup"/>

            <!--Create a source and stock and assign source to stock -->
            <createData entity="BopisStorePickupEnabledSource" stepKey="customSource1"/>
            <createData entity="BopisStorePickupEnabledSource" stepKey="customSource2"/>
            <createData entity="BasicMsiStock1" stepKey="customStock"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <waitForPageLoad stepKey="waitForDashboardLoad"/>

            <comment userInput="Assign source and sales channel to stock." stepKey="assignSourceToStockComment"/>
            <amOnPage url="{{AdminManageStockPage.url}}" stepKey="navigateToStockListPage"/>
            <waitForPageLoad time="30" stepKey="waitForStockGridLoad"/>
            <actionGroup ref="SearchAdminDataGridByKeywordActionGroup" stepKey="searchCustomStockByName">
                <argument name="keyword" value="$$customStock.stock[name]$$"/>
            </actionGroup>
            <click selector="{{AdminGridRow.editByValue($$customStock.stock[name]$$)}}" stepKey="clickEditCustomStock"/>
            <waitForPageLoad time="30" stepKey="waitForStockEditPageLoad"/>
            <selectOption selector="{{AdminEditStockSalesChannelsSection.websites}}" userInput="Main Website" stepKey="selectWebsiteAsSalesChannelForCustomStock"/>

            <click selector="{{AdminEditStockSourcesSection.assignSources}}" stepKey="clickOnAssignSources1"/>
            <actionGroup ref="SearchAdminDataGridByKeywordActionGroup" stepKey="searchCustomSource1ByName">
                <argument name="keyword" value="$$customSource1.source[name]$$"/>
            </actionGroup>
            <click selector="{{AdminGridRow.checkboxByValue($$customSource1.source[name]$$)}}" stepKey="selectCustomSource1ForCustomStock"/>
            <click selector="{{AdminManageSourcesGridControls.done}}" stepKey="clickOnDoneCustomSourceAssignment1"/>
            <click selector="{{AdminEditStockSourcesSection.assignSources}}" stepKey="clickOnAssignSources2"/>
            <actionGroup ref="SearchAdminDataGridByKeywordActionGroup" stepKey="searchCustomSource2ByName">
                <argument name="keyword" value="$$customSource2.source[name]$$"/>
            </actionGroup>
            <click selector="{{AdminGridRow.checkboxByValue($$customSource2.source[name]$$)}}" stepKey="selectCustomSource2ForCustomStock"/>
            <click selector="{{AdminManageSourcesGridControls.done}}" stepKey="clickOnDoneCustomSourceAssignment2"/>

            <click selector="{{AdminGridMainControls.saveAndContinue}}" stepKey="saveCustomStock"/>

            <!--Set Display Cart Summary to display items quantities -->
            <magentoCLI command="config:set {{DisplayItemsQuantities.path}} {{DisplayItemsQuantities.value}}" stepKey="setDisplayCartSummary"/>

            <!-- Create category -->
            <createData entity="SimpleSubCategory" stepKey="category1"/>

            <!-- Create  simple product 1 -->
            <createData entity="SimpleProductHomeDeliveryAndStorePickup" stepKey="simpleProduct1">
                <requiredEntity createDataKey="category1"/>
            </createData>

            <!-- Create  simple product 2 -->
            <createData entity="SimpleProductHomeDeliveryAndStorePickup" stepKey="simpleProduct2">
                <requiredEntity createDataKey="category1"/>
            </createData>

            <!-- Create grouped product -->
            <createData entity="ApiGroupedProduct" stepKey="groupedProduct"/>
            <createData entity="OneSimpleProductLink" stepKey="addProductOne">
                <requiredEntity createDataKey="groupedProduct"/>
                <requiredEntity createDataKey="simpleProduct1"/>
            </createData>
            <updateData entity="OneMoreSimpleProductLink" createDataKey="addProductOne" stepKey="addProductTwo">
                <requiredEntity createDataKey="groupedProduct"/>
                <requiredEntity createDataKey="simpleProduct2"/>
            </updateData>
        </before>
        <after>
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableFirstCreatedSource1">
                <argument name="sourceCode" value="$$customSource1.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableFirstCreatedSource2">
                <argument name="sourceCode" value="$$customSource2.source[source_code]$$"/>
            </actionGroup>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteProduct2"/>
            <deleteData createDataKey="groupedProduct" stepKey="deleteGroupProduct"/>
            <deleteData createDataKey="category1" stepKey="deleteCategory1"/>
            <magentoCLI command="config:set {{DisplayItemsQuantities.path}} {{DisplayItemsQuantities.value}}" stepKey="resetDisplayCartSummary"/>
            <!--Disable BOPIS Module after testing -->
            <magentoCLI command="config:set {{WCTEnabled.path}} 0" stepKey="disableModule"/>
            <magentoCLI command="config:set {{WCTInstorePickupEnabled.path}} 0" stepKey="disableInstorePickup"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdminArea"/>
        </after>

        <!-- Search for the product 1 and open in edit mode. -->
        <amOnPage url="{{AdminProductEditPage.url($$simpleProduct1.id$$)}}" stepKey="openProductEditPageToAssignSources1"/>
        <!-- Assign source to product 1. -->
        <waitForPageLoad time="60" stepKey="waitForAssignSourcesToProduct"/>
        <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignFirstSourceToProduct">
            <argument name="sourceCode" value="$$customSource1.source[source_code]$$"/>
        </actionGroup>
        <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignSecondSourceToProduct">
            <argument name="sourceCode" value="$$customSource2.source[source_code]$$"/>
        </actionGroup>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="0" stepKey="setProduct1Quantity1"/>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('2')}}" userInput="100" stepKey="setProduct1Quantity2"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct"/>
        <waitForPageLoad stepKey="waitForProductSave"/>
        <!-- See success message -->
        <seeElement selector="{{AdminProductMessagesSection.successMessage}}" stepKey="seeSaveProductMessage1"/>

        <!-- Search for the product 2 and open in edit mode. -->
        <amOnPage url="{{AdminProductEditPage.url($$simpleProduct2.id$$)}}" stepKey="openProductEditPageToAssignSources2"/>
        <!-- Assign source to product 2. -->
        <waitForPageLoad time="60" stepKey="waitForAssignSourcesToProduct2"/>
        <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignFirstSourceToProduct2">
            <argument name="sourceCode" value="$$customSource1.source[source_code]$$"/>
        </actionGroup>
        <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignSecondSourceToProduct2">
            <argument name="sourceCode" value="$$customSource2.source[source_code]$$"/>
        </actionGroup>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="0" stepKey="setProduct2Quantity1"/>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('2')}}" userInput="100" stepKey="setProduct2Quantity2"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct2"/>
        <waitForPageLoad stepKey="waitForProductSave2"/>
        <!-- See success message -->
        <seeElement selector="{{AdminProductMessagesSection.successMessage}}" stepKey="seeSaveProductMessage2"/>

        <!-- Create a user account -->
        <actionGroup ref="RegisterCustomOnStorefrontActionGroup" stepKey="createAnAccount">
            <argument name="Customer" value="MsiCustomer1"/>
            <argument name="storeCode" value="customStore.code"/>
        </actionGroup>

        <!-- Go to the product page -->
        <amOnPage url="{{StorefrontProductPage.url($$groupedProduct.custom_attributes[url_key]$)}}" stepKey="amOnProduct1Page"/>

        <!-- Select Store Pickup method and select store. -->
        <actionGroup ref="SelectStorePickupAndStoreFromStorefrontProductPageActionGroup" stepKey="selectStorePickupAndStore" >
            <argument name="sourceCode" value="$$customSource1.source[source_code]$$"/>
            <argument name="sourceName" value="$$customSource1.source[name]$$"/>
        </actionGroup>

        <!-- Fill Quantity and add Product to the cart -->
        <actionGroup ref="StorefrontAddTwoGroupedProductToTheCartActionGroup" stepKey="addGropedProductsToTheCart">
            <argument name="product1" value="$$simpleProduct1.name$$"/>
            <argument name="product2" value="$$simpleProduct2.name$$"/>
            <argument name="qty1" value="1"/>
            <argument name="qty2" value="2"/>
        </actionGroup>

        <!-- Open Mini Cart -->
        <actionGroup ref="StorefrontOpenMiniCartActionGroup" stepKey="openMiniCart"/>

        <!-- Assert product is not available message in Mini Cart -->
        <actionGroup ref="StorefrontAssertMiniCartItemOutOfStockActionGroup" stepKey="assertProductOutOfStockTextInMiniCart">
            <argument name="productOutOfStockText" value="The requested qty is not available"/>
        </actionGroup>
    </test>
</tests>
